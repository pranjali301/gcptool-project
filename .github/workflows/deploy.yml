name: Deploy Cloud Function

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run tests
        run: |
          cd function
          go mod tidy
          go test -v

      - name: Build gcptool
        run: |
          cd gcptool
          go mod tidy
          go build -o ../../gcptool .

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy with gcptool
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          cd gcptool
          go build -o ../../gcptool .
          cd ../..
          ./gcptool deploy my-cloud-function

      - name: Test deployed function
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          # Get function URL and test it
          FUNC_URL=$(gcloud functions describe my-cloud-function \
            --region=us-central1 \
            --project=$GCP_PROJECT_ID \
            --format="value(serviceConfig.uri)")

          if [ ! -z "$FUNC_URL" ]; then
            echo "Testing function at: $FUNC_URL"
            curl -f "$FUNC_URL?name=GitHub" || echo "Function test failed"
          fi
